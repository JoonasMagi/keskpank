const express = require('express');\nconst bodyParser = require('body-parser');\nconst cors = require('cors');\nconst fs = require('fs');\nconst path = require('path');\nconst { v4: uuidv4 } = require('uuid');\nconst swaggerJsDoc = require('swagger-jsdoc');\nconst swaggerUi = require('swagger-ui-express');\n\nconst app = express();\nconst PORT = process.env.PORT || 3000;\n\n// Swagger seadistus\nconst swaggerOptions = {\n  swaggerDefinition: {\n    openapi: '3.0.0',\n    info: {\n      title: 'Keskpanga API',\n      version: '1.0.0',\n      description: 'Keskpanga API, mis v\u00f5imaldab \u00f5pilastel oma panga rakenduste kaudu \u00fcksteisele \u00fclekandeid teha',\n      contact: {\n        name: 'API tugi',\n        email: 'support@example.com'\n      },\n      license: {\n        name: 'MIT',\n        url: 'https://opensource.org/licenses/MIT'\n      }\n    },\n    servers: [\n      {\n        url: 'http://localhost:3000',\n        description: 'Arendusserver'\n      }\n    ],\n    components: {\n      securitySchemes: {\n        ApiKeyAuth: {\n          type: 'apiKey',\n          in: 'header',\n          name: 'x-api-key'\n        }\n      }\n    }\n  },\n  apis: ['./server.js']\n};\n\nconst swaggerDocs = swaggerJsDoc(swaggerOptions);\n\n// Middleware\napp.use(cors());\napp.use(bodyParser.json());\napp.use(express.static('public'));\napp.use('/api-docs', swaggerUi.serve, swaggerUi.setup(swaggerDocs));\n\n// Andmebaasi failid\nconst BANKS_FILE = path.join(__dirname, 'data', 'banks.json');\nconst TRANSACTIONS_FILE = path.join(__dirname, 'data', 'transactions.json');\n\n// Tagame, et andmebaasi kataloog eksisteerib\nif (!fs.existsSync(path.join(__dirname, 'data'))) {\n  fs.mkdirSync(path.join(__dirname, 'data'));\n}\n\n// Tagame, et vajalikud JSON failid eksisteerivad\nif (!fs.existsSync(BANKS_FILE)) {\n  fs.writeFileSync(BANKS_FILE, JSON.stringify({ banks: [] }));\n}\n\nif (!fs.existsSync(TRANSACTIONS_FILE)) {\n  fs.writeFileSync(TRANSACTIONS_FILE, JSON.stringify({ transactions: [] }));\n}\n\n// Abifunktsioonid andmebaasi k\u00e4sitlemiseks\nfunction readBanks() {\n  const data = fs.readFileSync(BANKS_FILE, 'utf8');\n  return JSON.parse(data);\n}\n\nfunction writeBanks(data) {\n  fs.writeFileSync(BANKS_FILE, JSON.stringify(data, null, 2));\n}\n\nfunction readTransactions() {\n  const data = fs.readFileSync(TRANSACTIONS_FILE, 'utf8');\n  return JSON.parse(data);\n}\n\nfunction writeTransactions(data) {\n  fs.writeFileSync(TRANSACTIONS_FILE, JSON.stringify(data, null, 2));\n}